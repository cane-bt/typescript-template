// 1. 'Bird'という名前のインターフェースを定義します。このインターフェースは、'type'と'flyingSpeed'という2つのプロパティを持つオブジェクトを表します。
// 'type'は文字列で、値は常に'bird'です。'flyingSpeed'は数値です。

// 2. 'Horse'という名前のインターフェースを定義します。このインターフェースは、'type'と'runningSpeed'という2つのプロパティを持つオブジェクトを表します。
// 'type'は文字列で、値は常に'horse'です。'runningSpeed'は数値です。

// 3. 'Animal'という名前の型を定義します。この型は、'Bird'または'Horse'のどちらかを表します。

// 4. 'moveAnimal'という名前の関数を定義します。この関数は、'Animal'型の引数を取ります。
// 関数内部では、まず'speed'という名前の変数を宣言します。
// 次に、引数の'type'プロパティの値に基づいて、'speed'変数の値を設定します。
// 'type'が'bird'の場合、'speed'は引数の'flyingSpeed'プロパティの値になります。
// 'type'が'horse'の場合、'speed'は引数の'runningSpeed'プロパティの値になります。
// 最後に、'speed'変数の値をコンソールに出力します。

// 5. 'moveAnimal'関数を呼び出します。引数は、'type'が'bird'で、'flyingSpeed'が10のオブジェクトです。

// 以下のコメントアウトされたコードは、型ガードを使用した別の書き方です。
// この書き方では、'Bird'と'Horse'のインターフェースは'type'プロパティを持たず、代わりにそれぞれ独自の速度プロパティを持ちます。
// 'moveAnimal'関数では、引数が'flyingSpeed'プロパティを持つかどうかをチェックし、持つ場合はその値をコンソールに出力します。
