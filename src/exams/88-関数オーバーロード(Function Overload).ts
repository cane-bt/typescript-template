// 88. 関数オーバーロード
// 1. 'Admin'という名前の型を定義します。この型は、'name'（文字列）と'privileges'（文字列の配列）という2つのプロパティを持つオブジェクトを表します。

// 2. 'Employee'という名前の型を定義します。この型は、'name'（文字列）と'startDate'（Dateオブジェクト）という2つのプロパティを持つオブジェクトを表します。

// 3. 'Admin'と'Employee'の両方の特性を持つ新しい型'ElevatedEmployee'を定義します。これは'Admin'と'Employee'の交差型（'&'演算子を使用）として定義します。

// 4. 'ElevatedEmployee'型の新しいオブジェクト'e1'を作成します。このオブジェクトは、'name'に'Max'、'privileges'に['create-server']、'startDate'に現在の日付（'new Date()'）を持つように初期化します。

// 5. 'Combinable'という名前の型を定義します。この型は、文字列または数値（'string | number'）を表します。

// 6. 'Numeric'という名前の型を定義します。この型は、数値またはブール値（'number | boolean'）を表します。

// 7. 'Combinable'と'Numeric'の両方の特性を持つ新しい型'Universal'を定義します。これは'Combinable'と'Numeric'の交差型（'&'演算子を使用）として定義します。

// 8. 'add'という名前の関数を定義します。この関数は、2つの'Combinable'型の引数を取り、それらが文字列であれば連結した結果を、それ以外の場合は加算した結果を返します。
// ただし、この関数は関数オーバーロードを使用しており、引数の型によって異なる戻り値の型を持つことができます。
// 引数が2つとも数値の場合、戻り値の型は数値です。
// 引数が2つとも文字列の場合、戻り値の型は文字列です。
// 引数が1つが数値で1つが文字列の場合、戻り値の型は文字列です。
// 引数が1つが文字列で1つが数値の場合、戻り値の型は文字列です。

// 9. 'add'関数を呼び出し、その結果を'result'という名前の変数に代入します。引数は、'hello'と' typescript'の2つの文字列です。

// 10. 'result'変数の値をスペースで分割します。これは、'split'メソッドを使用して行います。
